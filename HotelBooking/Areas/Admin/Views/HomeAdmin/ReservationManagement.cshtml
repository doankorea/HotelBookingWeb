@using X.PagedList.Mvc.Core;
@model X.PagedList.IPagedList<HotelBooking.Models.Reservation>
@addTagHelper *, Microsoft.AspNetCore.Mvc.TagHelpers
@{
    ViewData["Title"] = "Reservation Management";
    Layout = "~/Areas/Admin/Views/Shared/_LayoutAdmin.cshtml";
}

<h1 class="text-center">Reservation Management</h1>
<hr />

<div class="mb-3">
    <a asp-action="AddnewReservation" class="btn btn-success">Create New Reservation</a>
</div>

<table class="table table-striped table-bordered">
    <thead class="thead-dark">
        <tr>
            <th>Check-In Date</th>
            <th>Check-Out Date</th>
            <th>Guests</th>
            <th>Status</th>
            <th>Booking Date</th>
            <th>Room</th>
            <th>User</th>
            <th class="text-center">Actions</th>
        </tr>
    </thead>
    <tbody>
        @foreach (var item in Model)
        {
            <tr>
                <td>@Html.DisplayFor(modelItem => item.CheckInDate)</td>
                <td>@Html.DisplayFor(modelItem => item.CheckOutDate)</td>
                <td>@Html.DisplayFor(modelItem => item.NumberOfGuests)</td>
                <td>@Html.DisplayFor(modelItem => item.Status)</td>
                <td>@Html.DisplayFor(modelItem => item.BookingDate)</td>
                <td>@Html.DisplayFor(modelItem => item.Room.RoomName)</td>
                <td>@Html.DisplayFor(modelItem => item.User.Email)</td>
                <td class="text-center">

                    <a asp-action="EditReservation" asp-route-ReservationId="@item.ReservationId" class="btn btn-warning btn-sm">Edit</a>
                    <a asp-action="DeleteReservation" asp-route-id="@item.ReservationId" class="btn btn-sm btn-danger">Delete</a>
                </td>
            </tr>
        }
    </tbody>
</table>
<div class="d-flex justify-content-between align-items-center mt-3">
    <div>
        @Html.PagedListPager(Model, page => Url.Action("Reservation", new { page = page }),
                 new PagedListRenderOptions
        {
            LiElementClasses = new List<string> { "page-item" },
            PageClasses = new List<string> { "page-link" },
            DisplayLinkToPreviousPage = PagedListDisplayMode.Always,
            DisplayLinkToNextPage = PagedListDisplayMode.Always,
            LinkToPreviousPageFormat = "« Previous",
            LinkToNextPageFormat = "Next »",
            MaximumPageNumbersToDisplay = 5,
            UlElementClasses = new[] { "pagination", "justify-content-start" }
        })
    </div>
</div>