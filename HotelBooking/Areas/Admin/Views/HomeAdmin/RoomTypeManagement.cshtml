
@using X.PagedList.Mvc.Core;
@model X.PagedList.IPagedList<HotelBooking.Models.RoomType>
@addTagHelper *, Microsoft.AspNetCore.Mvc.TagHelpers
@{
    ViewData["Title"] = "RoomTypeManagement";
    Layout = "~/Areas/Admin/Views/Shared/_LayoutAdmin.cshtml";
}

<div class="container mt-4">
    <h1 class="mb-4">Room Type Management</h1>

    <p>
        <a asp-action="Addnewroomtype" class="btn btn-primary">Create New</a>
    </p>

    <table class="table table-bordered table-striped table-hover">
        <thead class="thead-dark">
            <tr>
                <th>TypeName</th>
                <th>Description</th>
                <th>IsActive</th>
                <th>Actions</th>
            </tr>
        </thead>
        <tbody>
            @foreach (var item in Model)
            {
                <tr>
                    <td>@Html.DisplayFor(modelItem => item.TypeName)</td>
                    <td>@Html.DisplayFor(modelItem => item.Description)</td>
                    <td>
                        @if (item.IsActive)
                        {
                            <span class="badge bg-success">Active</span>
                        }
                        else
                        {
                            <span class="badge bg-danger">Inactive</span>
                        }
                    </td>
                    <td>
                        <a asp-action="Editroomtype" asp-route-RoomTypeId="@item.RoomTypeId" class="btn btn-sm btn-warning">Edit</a>
                        <a asp-action="Deleteroomtype" asp-route-id="@item.RoomTypeId" class="btn btn-sm btn-danger" onclick="return confirm('Are you sure you want to delete this room type?');">Delete</a>
                    </td>
                </tr>
            }
        </tbody>
    </table>

    <div class="d-flex justify-content-between align-items-center">
        

        <div>
            @Html.PagedListPager(Model, page => Url.Action("RoomType", new { page = page }),
                     new PagedListRenderOptions
            {

                LiElementClasses = new List<String> { "page-item" },
                PageClasses = new List<String> { "page-link" },
                DisplayLinkToPreviousPage = PagedListDisplayMode.Always,
                DisplayLinkToNextPage = PagedListDisplayMode.Always,
                LinkToPreviousPageFormat = "« Previous",
                LinkToNextPageFormat = "Next »",
                MaximumPageNumbersToDisplay = 5,
                UlElementClasses = new[] { "pagination", "justify-content-start" },
            })
           

        </div>
    </div>
</div>
