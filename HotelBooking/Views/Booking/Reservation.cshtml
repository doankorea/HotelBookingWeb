
@model X.PagedList.IPagedList<HotelBooking.Models.Reservation>
@using X.PagedList.Mvc.Core;
@addTagHelper *, Microsoft.AspNetCore.Mvc.TagHelpers
@{
    ViewData["Title"] = "Reservation";
    Layout = "~/Views/Shared/Layout.cshtml";
}

<div class="container mt-4">
    <h1 class="mb-4">Reservation Management</h1>

    @if (Model != null && Model.Any())
    {
        <table class="table table-striped table-bordered">
            <thead class="thead-dark">
                <tr>
                    <th>CheckInDate</th>
                    <th>CheckOutDate</th>
                    <th>Price</th>
                    <th>Status</th>
                    <th>BookingDate</th>
                    <th>Room</th>
                    <th>User</th>
                    <th>Actions</th>
                </tr>
            </thead>
            <tbody>
                @foreach (var item in Model)
                {
                    <tr>
                        <td>@(item.CheckInDate?.ToShortDateString() ?? "N/A")</td>
                        <td>@(item.CheckOutDate?.ToShortDateString() ?? "N/A")</td>
                        <td>@item.Room.Price</td>
                        <td>@Html.DisplayFor(modelItem => item.Status)</td>
                        <td>@(item.BookingDate?.ToShortDateString() ?? "N/A")</td>
                        <td>@Html.DisplayFor(modelItem => item.Room.RoomId)</td>
                        <td>@Html.DisplayFor(modelItem => item.User.Email)</td>
                        <td>
                            <a asp-action="DeleteReservation" asp-controller="Booking" asp-route-id="@item.ReservationId" class="btn btn-danger btn-sm"
                               onclick="return confirm('Bạn có chắc chắn muốn hủy chuyển này?');">Hủy chuyển</a>
                        </td>
                        
                        
                    </tr>
                }
            </tbody>
        </table>
    }
    else
    {
        <p>No reservations found.</p>
    }
</div>
<div class="d-flex justify-content-between align-items-center">


    <div>
        @Html.PagedListPager(Model, page => Url.Action("Reservation", new { page = page}),
                 new PagedListRenderOptions
        {

            LiElementClasses = new List<String> { "page-item" },
            PageClasses = new List<String> { "page-link" },
            DisplayLinkToPreviousPage = PagedListDisplayMode.Always,
            DisplayLinkToNextPage = PagedListDisplayMode.Always,
            LinkToPreviousPageFormat = "« Previous",
            LinkToNextPageFormat = "Next »",
            MaximumPageNumbersToDisplay = 5,
            UlElementClasses = new[] { "pagination", "justify-content-start" },
        })


    </div>
</div>
